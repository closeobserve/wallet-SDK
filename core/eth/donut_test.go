package eth

import (
	"testing"

	"github.com/coming-chat/wallet-SDK/core/testcase"
	"github.com/stretchr/testify/require"
)

func BevmChainMainnet() *Chain {
	return NewChainWithRpc("https://rpc-canary-1.bevm.io")
}

func TestFetchDonutInscriptions(t *testing.T) {
	owner := "0xC91A369B080638a1e1D0cFC81f3c420414E66aEe"
	ins, err := FetchDonutInscriptions(owner, "")
	require.Nil(t, err)
	t.Log(ins.JsonString())
}

func TestBuildDonutTransfer(t *testing.T) {
	chain := BevmChainMainnet()
	sender, _ := NewAccountWithMnemonic(testcase.M1)
	receiver := "0xa2cCF83EA437565a37E1F2d49940e0C4C7D7591e"

	txn, err := chain.BuildDonutTransfer(sender.Address(), receiver, "BEVM", "1000")
	require.Nil(t, err)
	wantDataHex := "0x0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000a2ccf83ea437565a37e1f2d49940e0c4c7d7591e000000000000000000000000000000000000000000000000000000000000016000000000000000000000000000000000000000000000000000000000000001a000000000000000000000000000000000000000000000000000000000000001e000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000003e80000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000022000000000000000000000000000000000000000000000000000000000000000067372632d3230000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000087472616e7366657200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000044245564d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000027b7d000000000000000000000000000000000000000000000000000000000000"
	require.Equal(t, txn.Data, wantDataHex)

	signedTxn, err := chain.BuildTransferTxWithAccount(sender, txn)
	require.Nil(t, err)

	send := false
	if send {
		hash, err := chain.SendRawTransaction(signedTxn.Value)
		require.Nil(t, err)
		t.Log("send success, hash = ", hash)
	}
}

package secp256k1

import "testing"

//func TestGetAccount(t *testing.T) {
//	"save account lyrics trick warm wrap token mutual radio return hidden holiday"
//}

func TestIsValidSignature(t *testing.T) {
	type args struct {
		publicKey []byte
		msg       []byte
		signature []byte
	}
	tests := []struct {
		name string
		args args
		want bool
	}{
		{
			name: "test",
			args: args{
				publicKey: []byte{0x04, 0x38, 0xc3, 0x2d, 0xa7, 0xc1, 0xaf, 0x35, 0x0a, 0xe4, 0x46, 0xe5, 0x43, 0xbe, 0x1f, 0xad, 0x2e, 0x6d, 0x49, 0x79, 0x1b, 0x7c, 0x7d, 0xca, 0xef, 0xbe, 0x18, 0xd6, 0x3d, 0xdd, 0x3f, 0x42, 0x67, 0x35, 0xea, 0x5b, 0x0f, 0x28, 0xd6, 0x48, 0x9b, 0x4e, 0x4d, 0x9a, 0x38, 0xed, 0x17, 0x0c, 0xaf, 0xf1, 0xac, 0x1a, 0x3a, 0x64, 0x03, 0x33, 0xc0, 0x95, 0xb4, 0xc3, 0x62, 0x77, 0xbf, 0x08, 0xee},
				msg:       []byte{0xdb, 0x66, 0xdc, 0x33, 0x41, 0x1f, 0xb0, 0xfd, 0x7e, 0x04, 0x4c, 0xbc, 0x22, 0xd7, 0x5c, 0x01, 0x6b, 0x7f, 0x91, 0xd1, 0xeb, 0x5d, 0x5c, 0x2a, 0x76, 0x20, 0x2d, 0xff, 0xc9, 0x75, 0x5c, 0xc9},
				signature: []byte{0x97, 0x0a, 0xc0, 0x04, 0x1e, 0xb5, 0xfd, 0x45, 0xef, 0xe4, 0xd2, 0x97, 0xe4, 0x53, 0x5a, 0xf0, 0x58, 0x99, 0xca, 0x9a, 0x87, 0x75, 0xbe, 0x47, 0x19, 0x3a, 0x3d, 0x10, 0x61, 0x0a, 0x69, 0x35, 0x2a, 0x9c, 0x70, 0x1a, 0x6a, 0x40, 0x5c, 0xb1, 0x1b, 0x83, 0xb6, 0x70, 0x71, 0xc5, 0x9b, 0xa7, 0xde, 0x76, 0x96, 0xb6, 0x7b, 0xc4, 0xa4, 0xbb, 0x8f, 0xe0, 0x9f, 0xed, 0xf4, 0x10, 0xf5, 0xac},
			},
			want: true,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if got := IsValidSignature(tt.args.publicKey, tt.args.msg, tt.args.signature); got != tt.want {
				t.Errorf("IsValidSignature() = %v, want %v", got, tt.want)
			}
		})
	}
}
